name: Check Rust

on:
  workflow_call:
    inputs:
      rust-version:
        required: true
        type: string

env:
  CARGO_INCREMENTAL: 0

jobs:
  check:
    name: Check (${{ inputs.rust-version }}, ${{ matrix.features-name }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - features-name: "all"
            features-args: "--all-features"
          - features-name: "default"
            features-args: ""
          - features-name: "no-default"
            features-args: "--no-default-features"
          - features-name: "jobs-only"
            features-args: "--no-default-features --features jobs"
          - features-name: "cron-only"
            features-args: "--no-default-features --features cron"

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      SQLX_OFFLINE: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.rust-version }}
          components: rustfmt, clippy

      - name: Run clippy
        run: cargo clippy --all-targets ${{ matrix.features-args }} -- -D warnings
        continue-on-error: ${{ inputs.rust-version == 'nightly' }}

      - name: Build
        run: cargo build --all-targets ${{ matrix.features-args }}

      - name: Run tests
        run: cargo test --all-targets ${{ matrix.features-args }}
